/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.0.0-rc4-master-9d52697
 */
function MenuBarController(e,t,n,o,r,i,l,u){this.$element=n,this.$attrs=o,this.$mdConstant=r,this.$mdUtil=l,this.$document=i,this.$scope=e,this.$rootScope=t,this.$timeout=u;var a=this;angular.forEach(BOUND_MENU_METHODS,function(e){a[e]=angular.bind(a,a[e])})}function MenuBarDirective(e,t){return{restrict:"E",require:"mdMenuBar",controller:"MenuBarController",compile:function(n,o){return o.ariaRole||n[0].setAttribute("role","menubar"),angular.forEach(n[0].children,function(t){if("MD-MENU"==t.nodeName){t.hasAttribute("md-position-mode")||t.setAttribute("md-position-mode","left bottom"),t.setAttribute("role","menu");var n=e.nodesToArray(t.querySelectorAll("md-menu-content"));angular.forEach(n,function(e){e.classList.add("md-menu-bar-menu"),e.classList.add("md-dense"),e.hasAttribute("width")||e.setAttribute("width",5)})}}),function(e,n,o,r){t(e,n),r.init()}}}}function MenuDividerDirective(){return{restrict:"E",compile:function(e,t){t.role||e[0].setAttribute("role","separator")}}}function MenuItemController(e,t,n){this.$element=t,this.$attrs=n,this.$scope=e}function MenuItemDirective(){return{require:["mdMenuItem","?ngModel"],compile:function(e,t){function n(t,n){e[0].hasAttribute(t)||e[0].setAttribute(t,n)}function o(t){if(e[0].hasAttribute(t)){var n=e[0].getAttribute(t);i[0].setAttribute(t,n),e[0].removeAttribute(t)}}if("checkbox"==t.type||"radio"==t.type){var r=e[0].textContent,i=angular.element('<md-button type="button"></md-button>');i.html(r),i.attr("tabindex","0"),e.html(""),e.append(angular.element('<md-icon md-svg-icon="check"></md-icon>')),e.append(i),e[0].classList.add("md-indent"),n("role","checkbox"==t.type?"menuitemcheckbox":"menuitemradio"),angular.forEach(["ng-disabled"],o)}else n("role","menuitem");return function(e,t,n,o){var r=o[0],i=o[1];r.init(i)}},controller:"MenuItemController"}}goog.provide("ng.material.components.menuBar"),goog.require("ng.material.components.menu"),goog.require("ng.material.core"),angular.module("material.components.menuBar",["material.core","material.components.menu"]),angular.module("material.components.menuBar").controller("MenuBarController",MenuBarController);var BOUND_MENU_METHODS=["handleKeyDown","handleMenuHover","scheduleOpenHoveredMenu","cancelScheduledOpen"];MenuBarController.$inject=["$scope","$rootScope","$element","$attrs","$mdConstant","$document","$mdUtil","$timeout"],MenuBarController.prototype.init=function(){var e=this.$element,t=this.$mdUtil,n=this.$scope,o=this,r=[];e.on("keydown",this.handleKeyDown),this.parentToolbar=t.getClosest(e,"MD-TOOLBAR"),r.push(this.$rootScope.$on("$mdMenuOpen",function(t,n){-1!=o.getMenus().indexOf(n[0])&&(e[0].classList.add("md-open"),n[0].classList.add("md-open"),o.currentlyOpenMenu=n.controller("mdMenu"),o.currentlyOpenMenu.registerContainerProxy(o.handleKeyDown),o.enableOpenOnHover())})),r.push(this.$rootScope.$on("$mdMenuClose",function(n,r,i){var l=o.getMenus();if(-1!=l.indexOf(r[0])&&(e[0].classList.remove("md-open"),r[0].classList.remove("md-open")),i.closeAll&&e[0].contains(r[0])){for(var u=r[0];u&&-1==l.indexOf(u);)u=t.getClosest(u,"MD-MENU",!0);u&&(i.skipFocus||u.querySelector("button:not([disabled])").focus(),o.currentlyOpenMenu=void 0,o.disableOpenOnHover(),o.setKeyboardMode(!0))}})),n.$on("$destroy",function(){for(;r.length;)r.shift()()}),this.setKeyboardMode(!0)},MenuBarController.prototype.setKeyboardMode=function(e){e?this.$element[0].classList.add("md-keyboard-mode"):this.$element[0].classList.remove("md-keyboard-mode")},MenuBarController.prototype.enableOpenOnHover=function(){if(!this.openOnHoverEnabled){this.openOnHoverEnabled=!0;var e;(e=this.parentToolbar)&&(e.dataset.mdRestoreStyle=e.getAttribute("style"),e.style.position="relative",e.style.zIndex=100),angular.element(this.getMenus()).on("mouseenter",this.handleMenuHover)}},MenuBarController.prototype.handleMenuHover=function(e){this.setKeyboardMode(!1),this.openOnHoverEnabled&&this.scheduleOpenHoveredMenu(e)},MenuBarController.prototype.disableOpenOnHover=function(){if(this.openOnHoverEnabled){this.openOnHoverEnabled=!1;var e;(e=this.parentToolbar)&&e.setAttribute("style",e.dataset.mdRestoreStyle||""),angular.element(this.getMenus()).off("mouseenter",this.handleMenuHover)}},MenuBarController.prototype.scheduleOpenHoveredMenu=function(e){var t=angular.element(e.currentTarget),n=t.controller("mdMenu");this.setKeyboardMode(!1),this.scheduleOpenMenu(n)},MenuBarController.prototype.scheduleOpenMenu=function(e){var t=this,n=this.$timeout;e!=t.currentlyOpenMenu&&(n.cancel(t.pendingMenuOpen),t.pendingMenuOpen=n(function(){t.pendingMenuOpen=void 0,t.currentlyOpenMenu&&t.currentlyOpenMenu.close(!0,{closeAll:!0}),e.open()},200,!1))},MenuBarController.prototype.handleKeyDown=function(e){var t=this.$mdConstant.KEY_CODE,n=this.currentlyOpenMenu,o=n&&n.isOpen;this.setKeyboardMode(!0);var r,i,l;switch(e.keyCode){case t.DOWN_ARROW:n?n.focusMenuContainer():this.openFocusedMenu(),r=!0;break;case t.UP_ARROW:n&&n.close(),r=!0;break;case t.LEFT_ARROW:i=this.focusMenu(-1),o&&(l=angular.element(i).controller("mdMenu"),this.scheduleOpenMenu(l)),r=!0;break;case t.RIGHT_ARROW:i=this.focusMenu(1),o&&(l=angular.element(i).controller("mdMenu"),this.scheduleOpenMenu(l)),r=!0}r&&(e&&e.preventDefault&&e.preventDefault(),e&&e.stopImmediatePropagation&&e.stopImmediatePropagation())},MenuBarController.prototype.focusMenu=function(e){var t=this.getMenus(),n=this.getFocusedMenuIndex();-1==n&&(n=this.getOpenMenuIndex());var o=!1;return-1==n?n=0:(0>e&&n>0||e>0&&n<t.length-e)&&(n+=e,o=!0),o?(t[n].querySelector("button").focus(),t[n]):void 0},MenuBarController.prototype.openFocusedMenu=function(){var e=this.getFocusedMenu();e&&angular.element(e).controller("mdMenu").open()},MenuBarController.prototype.getMenus=function(){var e=this.$element;return this.$mdUtil.nodesToArray(e[0].children).filter(function(e){return"MD-MENU"==e.nodeName})},MenuBarController.prototype.getFocusedMenu=function(){return this.getMenus()[this.getFocusedMenuIndex()]},MenuBarController.prototype.getFocusedMenuIndex=function(){var e=this.$mdUtil,t=e.getClosest(this.$document[0].activeElement,"MD-MENU");if(!t)return-1;var n=this.getMenus().indexOf(t);return n},MenuBarController.prototype.getOpenMenuIndex=function(){for(var e=this.getMenus(),t=0;t<e.length;++t)if(e[t].classList.contains("md-open"))return t;return-1},angular.module("material.components.menuBar").directive("mdMenuBar",MenuBarDirective),MenuBarDirective.$inject=["$mdUtil","$mdTheming"],angular.module("material.components.menuBar").directive("mdMenuDivider",MenuDividerDirective),angular.module("material.components.menuBar").controller("MenuItemController",MenuItemController),MenuItemController.$inject=["$scope","$element","$attrs"],MenuItemController.prototype.init=function(e){var t=this.$element,n=this.$attrs;this.ngModel=e,("checkbox"==n.type||"radio"==n.type)&&(this.mode=n.type,this.iconEl=t[0].children[0],this.buttonEl=t[0].children[1],e&&this.initClickListeners())},MenuItemController.prototype.initClickListeners=function(){function e(){if("radio"==l){var e=r.ngValue?o.$eval(r.ngValue):r.value;return n.$modelValue==e}return n.$modelValue}function t(e){e?a.off("click",s):a.on("click",s)}var n=this.ngModel,o=this.$scope,r=this.$attrs,i=this.$element,l=this.mode;this.handleClick=angular.bind(this,this.handleClick);var u=this.iconEl,a=angular.element(this.buttonEl),s=this.handleClick;r.$observe("disabled",t),t(r.disabled),n.$render=function(){e()?(u.style.display="",i.attr("aria-checked","true")):(u.style.display="none",i.attr("aria-checked","false"))},o.$$postDigest(n.$render)},MenuItemController.prototype.handleClick=function(e){var t,n=this.mode,o=this.ngModel,r=this.$attrs;"checkbox"==n?t=!o.$modelValue:"radio"==n&&(t=r.ngValue?this.$scope.$eval(r.ngValue):r.value),o.$setViewValue(t),o.$render()},angular.module("material.components.menuBar").directive("mdMenuItem",MenuItemDirective),ng.material.components.menuBar=angular.module("material.components.menuBar");